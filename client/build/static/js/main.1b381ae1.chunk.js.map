{"version":3,"sources":["app/constants.ts","app/hooks.ts","redux/slices/fleaMarketSlice.ts","styles/animations.ts","styles/commonStyles.ts","components/service/functionRequest.ts","components/game/Common/Input.tsx","components/game/Input/Prompt.tsx","components/game/Chase/ChaseHUD.tsx","components/game/Chase/ChaseResult.tsx","components/game/Chase/Chase.tsx","components/game/Common/InputString.tsx","components/game/Input/Buy.tsx","components/game/Input/BuySellJet.tsx","components/game/Input/Instructions.tsx","components/game/Input/Jet.tsx","components/game/Input/ManageShark.tsx","components/game/Input/ManageBank.tsx","components/game/Input/ManageStash.tsx","components/game/Input/ManageInventory.tsx","components/game/Input/Sell.tsx","components/game/View/HighScores.tsx","components/game/Input/Title.tsx","components/game/Input/Event.tsx","components/game/Input/GameOver.tsx","components/game/Input/Interactive.tsx","components/game/View/Prices.tsx","components/game/View/Stash.tsx","components/game/View/TrenchCoat.tsx","components/game/View/Location.tsx","components/game/View/Date.tsx","components/game/View/HUD.tsx","assets/audio/flea-market-theme.mp3","assets/audio/flea-market-main.mp3","components/game/Common/AudioPlayer.tsx","components/Main.tsx","app/App.tsx","reportWebVitals.js","app/store.ts","index.tsx"],"names":["GameStateEnum","GameSubMenuEnum","FleaMarketFunction","itemAllowableKeys","numberKeys","lowercaseLetters","uppercaseLetters","specialCharacters","spaceBarKey","runOrBribeKeys","yOrN","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","value","prices","massageChairs","cellPhones","switchblades","hotSauce","dvds","fakeShoes","stash","bank","debt","trenchCoat","cornDogs","cash","maxHold","chase","health","stooges","gameManager","gameState","INIT","gameSubMenu","day","maximumBuy","currentItem","systemMessage","location","fleaMarketSlice","createSlice","name","reducers","setPrices","state","action","payload","setGameState","setGameSubMenu","setChase","setGameStateAndSubMenu","setYesOrNoContinue","setExitChase","setStash","setCornDogs","setTransferItemToStashResponse","setTransferItemToTrenchCoatResponse","setTrenchCoat","setLocation","setDay","setCurrentItem","setChaseResponse","setItemToTransfer","setRepayBorrowSharkResponse","setDepositWithdrawBankResponse","setDepositWithdrawBankResponseConclusion","setMaximumBuy","setBuySellResponse","setLocationResponse","actions","selectPrices","fleaMarket","selectStash","selectLocation","selectTrenchCoat","selectGameState","selectGameSubMenu","selectDay","selectMaximumBuy","selectCurrentItem","selectSystemMessage","selectBank","selectCash","selectStooges","selectHealth","selectCornDogs","cursorBlinkAnimation","keyframes","StyledCursor","styled","span","StyledCursorWrapper","div","GreyText","env","process","console","log","sendFunctionRequest","func","a","fetch","method","headers","body","JSON","stringify","function","params","credentials","response","json","data","Input","gameFunction","reduxAction","allowableKeys","dispatch","handleKeyDown","useCallback","e","undefined","find","allowableKey","key","document","removeEventListener","preventDefault","stopPropagation","repeat","gameFunctionReturn","useEffect","addEventListener","memo","Prompt","promptText","promptFunction","promptReduxAction","getChase","GET_CHASE","getCornDogs","GET_CORN_DOGS","StyledSpan","ChaseHUD","stoogeData","healthData","cornDogData","useState","showChaseData","setShowChaseData","showCornDogs","setShowCornDogsData","fetchChase","fetchCornDogs","runOrBribeContinueFunction","RUN_OR_BRIBE_CONTINUE","healFunction","HEAL","ChaseResult","CHASE_RESULT","chaseStartFunction","START_CHASE","chaseRunFunction","RUN","runOrBribeFunction","RUN_OR_BRIBE","Chase","stoogesData","CHASE_START","chaseStartText","InputString","comparator","inputIsString","input","setInput","length","prevState","slice","parseInt","checkMaximumBuy","CHECK_MAXIMUM_BUY","Buy","buyItem","item","amount","BUY_ITEM","maxBuy","toUpperCase","buySellJetPrompt","BUY_SELL_JET","StyledBuySellJet","buySellJetAllowableKeys","BuySellJet","StyledUl","ul","instructionsContinue","INSTRUCTIONS_CONTINUE","getInstructions","GET_INSTRUCTIONS","Instructions","instructions","setInstructions","fetchInstructionsContent","instructionsContent","jetPrompt","CHANGE_LOCATION","StyledLocationDiv","jetAllowableKeys","Jet","repayShark","REPAY_SHARK","borrowFromShark","BORROW_FROM_SHARK","ManageShark","currentCash","SHARK","SHARK_BORROW","depositToBank","DEPOSIT_TO_BANK","withdrawFromBank","WITHDRAW_FROM_BANK","ManageBank","currentBank","BANK","BANK_WITHDRAW","selectItemToManage","SELECT_ITEM_TO_MANAGE","transferItemToStash","TRANSFER_ITEM_TO_STASH","transferItemToTrenchCoat","TRANSFER_ITEM_TO_TRENCH_COAT","ManageStash","currentStash","currentTrenchCoat","manageStashAllowableKeys","push","STASH","TRANSFER_TO_TRENCH_COAT","sharkContinueFunction","SHARK_CONTINUE","stashContinueFunction","STASH_CONTINUE","bankContinueFunction","BANK_CONTINUE","ManageInventory","PROMPT_FOR_SHARK","PROMPT_FOR_STASH","PROMPT_FOR_BANK","stageCurrentItem","STAGE_CURRENT_ITEM","Sell","sellItem","SELL_ITEM","getHighScores","GET_HIGH_SCORES","creditRoll","StyledHighScoreWrapper","StyledScores","StyledTitle","StyledHighScores","StyledScoreLine","ol","HighScores","highScores","setHighScores","fetchHighScores","map","highScore","index","user_name","score","instructionsPrompt","INSTRUCTIONS_PROMPT","StyledMainTitle","Title","eventContinueFunction","EVENT_CONTINUE","eventYesOrNoFunction","YES_OR_NO_CONTINUE","Event","YES_OR_NO_EVENT","restartGameFunction","RESTART_GAME","GameOver","persistHighScoreFunction","PERSIST_HIGH_SCORE","HIGH_SCORE","WIN","CLEAR","StyledInteractive","Interactive","INSTRUCTIONS","MANAGE_INVENTORY","JET","BUY","SELL","CHASE","EVENT","GAME_OVER","StyledPrices","StyledH3","h3","Prices","priceData","StyledStash","StyledBankDebt","Stash","stashData","StyledTrenchCoat","StyledUtils","TrenchCoat","trenchCoatData","Location","locationData","replace","str","Date","dayData","getPrices","GET_PRICES","getStash","GET_STASH","getTrenchCoat","GET_TRENCH_COAT","getLocation","GET_LOCATION","getDay","GET_DAY","StyledHUD","StyledInventory","StyledLocationAndDate","HUD","showPriceData","setShowPriceData","showStashData","setShowStashData","showTrenchCoatData","setShowTrenchCoatData","showLocationData","setShowLocationData","showDayData","setShowDayData","fetchPrices","fetchStash","stashState","fetchTrenchCoat","trenchCoatState","fetchLocation","locationState","fetchDay","dayState","StyledAudioPlayer","AudioPlayer","muted","setMuted","audioTrack","setAudioTrack","audioPlayerRef","useRef","current","fleaMarketTheme","load","fleaMarketMain","onClick","autoPlay","loop","ref","src","type","Main","newGame","NEW_GAME","startNewGame","initGameState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","fleaMarketReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b381ae1.chunk.js","sourcesContent":["export enum GameStateEnum {\n  INIT = \"init\",\n  BUY_SELL_JET = \"buySellJet\",\n  INSTRUCTIONS = \"instructions\",\n  BUY = \"buy\",\n  SELL = \"sell\",\n  JET = \"jet\",\n  MANAGE_INVENTORY = \"manageInventory\",\n  CHASE = \"chase\",\n  EVENT = \"event\",\n  GAME_OVER = \"gameOver\",\n}\n\nexport enum GameSubMenuEnum {\n  PROMPT_FOR_SHARK = \"promptForShark\",\n  PROMPT_FOR_STASH = \"promptForStash\",\n  PROMPT_FOR_BANK = \"promptForBank\",\n  SHARK = \"shark\",\n  SHARK_BORROW = \"sharkBorrow\",\n  STASH = \"stash\",\n  TRANSFER_TO_TRENCH_COAT = \"transferToTrenchCoat\",\n  BANK = \"bank\",\n  BANK_WITHDRAW = \"bankWithdraw\",\n  CHASE_START = \"chaseStart\",\n  RUN = \"run\",\n  RUN_OR_BRIBE = \"runOrBribe\",\n  CHASE_RESULT = \"chaseResult\",\n  HEAL = \"heal\",\n  YES_OR_NO_EVENT = \"yesOrNoEvent\",\n  HIGH_SCORE = \"highScore\",\n  WIN = \"win\",\n  CLEAR = \"\",\n}\n\nexport enum FleaMarketFunction {\n  CHECK_MAXIMUM_BUY = \"CHECK_MAXIMUM_BUY\",\n  GET_PRICES = \"GET_PRICES\",\n  BUY_SELL_JET = \"BUY_SELL_JET\",\n  CHANGE_LOCATION = \"CHANGE_LOCATION\",\n  INSTRUCTIONS_PROMPT = \"INSTRUCTIONS_PROMPT\",\n  GET_INSTRUCTIONS = \"GET_INSTRUCTIONS\",\n  INSTRUCTIONS_CONTINUE = \"INSTRUCTIONS_CONTINUE\",\n  GET_STASH = \"GET_STASH\",\n  GET_TRENCH_COAT = \"GET_TRENCH_COAT\",\n  GET_LOCATION = \"GET_LOCATION\",\n  NEW_GAME = \"NEW_GAME\",\n  GET_DAY = \"GET_DAY\",\n  BUY_ITEM = \"BUY_ITEM\",\n  SELL_ITEM = \"SELL_ITEM\",\n  STAGE_CURRENT_ITEM = \"STAGE_CURRENT_ITEM\",\n  SHARK_CONTINUE = \"SHARK_CONTINUE\",\n  STASH_CONTINUE = \"STASH_CONTINUE\",\n  BANK_CONTINUE = \"BANK_CONTINUE\",\n  REPAY_SHARK = \"REPAY_SHARK\",\n  GET_MAXIMUM_REPAY = \"GET_MAXIMUM_REPAY\",\n  BORROW_FROM_SHARK = \"BORROW_FROM_SHARK\",\n  DEPOSIT_TO_BANK = \"DEPOSIT_TO_BANK\",\n  WITHDRAW_FROM_BANK = \"WITHDRAW_FROM_BANK\",\n  SELECT_ITEM_TO_MANAGE = \"SELECT_ITEM_TO_MANAGE\",\n  TRANSFER_ITEM_TO_STASH = \"TRANSFER_ITEM_TO_STASH\",\n  TRANSFER_ITEM_TO_TRENCH_COAT = \"TRANSFER_ITEM_TO_TRENCH_COAT\",\n  START_CHASE = \"START_CHASE\",\n  GET_CHASE = \"GET_CHASE\",\n  RUN = \"RUN\",\n  GET_CORN_DOGS = \"GET_CORN_DOGS\",\n  RUN_OR_BRIBE = \"RUN_OR_BRIBE\",\n  RUN_OR_BRIBE_CONTINUE = \"RUN_OR_BRIBE_CONTINUE\",\n  HEAL = \"HEAL\",\n  EVENT_CONTINUE = \"EVENT_CONTINUE\",\n  YES_OR_NO_CONTINUE = \"YES_OR_NO_CONTINUE\",\n  PERSIST_HIGH_SCORE = \"PERSIST_HIGH_SCORE\",\n  RESTART_GAME = \"RESTART_GAME\",\n  GET_HIGH_SCORES = \"GET_HIGH_SCORES\",\n}\n\nexport const itemAllowableKeys = [\n  \"d\",\n  \"h\",\n  \"s\",\n  \"f\",\n  \"c\",\n  \"m\",\n  \"D\",\n  \"H\",\n  \"S\",\n  \"F\",\n  \"C\",\n  \"M\",\n];\n\nexport const numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nexport const lowercaseLetters = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nexport const uppercaseLetters = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport const specialCharacters = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"-\",\n  \"_\",\n  \"+\",\n  \"=\",\n  \"{\",\n  \"}\",\n  \"[\",\n  \"]\",\n  \"|\",\n  \";\",\n  \":\",\n  \"<\",\n  \">\",\n  \",\",\n  \".\",\n  \"/\",\n  \"?\",\n];\nexport const spaceBarKey = [\" \"];\n\nexport const runOrBribeKeys = [\"r\", \"b\", \"R\", \"B\"];\n\nexport const yOrN = [\"y\", \"n\", \"Y\", \"N\"];\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { GameStateEnum } from \"../../app/constants\";\nimport type { RootState } from \"../../app/store\";\n\nexport interface SetLocationResponseType {\n  day: number;\n  gameState: string;\n  gameSubMenu?: string;\n  location: string;\n  prices: PricesStateType;\n  debt: number;\n  bank: number;\n  systemMessage?: string;\n  trenchCoat?: TrenchCoatStateType;\n}\n\nexport interface SetExitChaseResponseTyppe {\n  day?: number;\n  gameState: string;\n  gameSubMenu?: string;\n  location?: string;\n  prices?: PricesStateType;\n  debt?: number;\n  bank?: number;\n  systemMessage?: string;\n  trenchCoat?: TrenchCoatStateType;\n}\n\nexport interface PricesStateType {\n  massageChairs: number;\n  cellPhones: number;\n  switchblades: number;\n  hotSauce: number;\n  dvds: number;\n  fakeShoes: number;\n}\n\nexport interface StashStateType {\n  massageChairs: number;\n  cellPhones: number;\n  switchblades: number;\n  hotSauce: number;\n  dvds: number;\n  fakeShoes: number;\n  bank: number;\n  debt: number;\n}\n\nexport interface TrenchCoatStateType {\n  massageChairs: number;\n  cellPhones: number;\n  switchblades: number;\n  hotSauce: number;\n  dvds: number;\n  fakeShoes: number;\n  cornDogs: number;\n  cash: number;\n  maxHold: number;\n}\n\ninterface GameManagerStateType {\n  gameState?: string;\n  gameSubMenu?: string;\n  day: number;\n  maximumBuy: number | null;\n  currentItem: string;\n  systemMessage: string | undefined;\n}\n\ninterface GameStateAndSubMenuType {\n  gameState?: string;\n  gameSubMenu?: string;\n}\n\ninterface SetYesOrNoContinueType {\n  gameState?: string;\n  gameSubMenu?: string;\n  trenchCoat?: TrenchCoatStateType;\n}\ninterface SetRepayBorrowSharkResponseType {\n  debt: number;\n  cash: number;\n  gameSubMenu: string;\n}\n\ninterface SetDepositWithdrawBankResponseType {\n  bank: number;\n  cash: number;\n  gameSubMenu: string;\n}\n\ninterface SetDepositWithdrawBankResponseConclusionType {\n  bank: number;\n  cash: number;\n  gameState: string;\n  gameSubMenu: string;\n}\n\ninterface MaximumBuyStateType {\n  maximumBuy: number;\n  currentItem: string;\n}\n\ninterface SetItemToTransferType {\n  currentItem: string;\n  gameSubMenu: string;\n}\n\ninterface FleaMarketStateType {\n  value: number;\n  prices: PricesStateType;\n  gameManager: GameManagerStateType;\n  stash: StashStateType;\n  trenchCoat: TrenchCoatStateType;\n  location: string;\n  chase: ChaseStateType;\n}\n\ninterface ChaseStateType {\n  health: number;\n  stooges: number;\n}\n\ninterface BuySellResponseStateType {\n  trenchCoat: TrenchCoatStateType;\n  maximumBuy: number | null;\n  currentItem: string;\n  gameState: string;\n}\n\ninterface SetTransferItemToStashResponseType {\n  stash: StashStateType;\n  trenchCoat: TrenchCoatStateType;\n  gameSubMenu: string;\n}\n\ninterface SetTransferItemToTrenchCoatResponseType {\n  trenchCoat: TrenchCoatStateType;\n  stash: StashStateType;\n  gameSubMenu: string;\n  currentItem: string;\n}\n\ninterface RunResponseStateType {\n  gameSubMenu: string;\n  chase: ChaseStateType;\n  systemMessage: string;\n}\n\nconst initialState: FleaMarketStateType = {\n  value: 0,\n  prices: {\n    massageChairs: 0,\n    cellPhones: 0,\n    switchblades: 0,\n    hotSauce: 0,\n    dvds: 0,\n    fakeShoes: 0,\n  },\n  stash: {\n    massageChairs: 0,\n    cellPhones: 0,\n    switchblades: 0,\n    hotSauce: 0,\n    dvds: 0,\n    fakeShoes: 0,\n    bank: 0,\n    debt: 0,\n  },\n  trenchCoat: {\n    massageChairs: 0,\n    cellPhones: 0,\n    switchblades: 0,\n    hotSauce: 0,\n    dvds: 0,\n    fakeShoes: 0,\n    cornDogs: 0,\n    cash: 0,\n    maxHold: 0,\n  },\n  chase: {\n    health: 0,\n    stooges: 0,\n  },\n  gameManager: {\n    gameState: GameStateEnum.INIT,\n    gameSubMenu: \"\",\n    day: 0,\n    maximumBuy: null,\n    currentItem: \"\",\n    systemMessage: \"\",\n  },\n  location: \"\",\n};\n\n//reducer\nexport const fleaMarketSlice = createSlice({\n  name: \"fleaMarket\",\n  initialState,\n  reducers: {\n    setPrices: (state, action: PayloadAction<PricesStateType>) => {\n      state.prices = action.payload;\n    },\n    setGameState: (state, action: PayloadAction<string>) => {\n      state.gameManager.gameState = action.payload;\n    },\n    setGameSubMenu: (state, action: PayloadAction<string>) => {\n      state.gameManager.gameSubMenu = action.payload;\n    },\n    setChase: (state, action: PayloadAction<ChaseStateType>) => {\n      state.chase = action.payload;\n    },\n    setGameStateAndSubMenu: (\n      state,\n      action: PayloadAction<GameStateAndSubMenuType>\n    ) => {\n      state.gameManager.gameState = action.payload.gameState;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n    },\n    setYesOrNoContinue: (\n      state,\n      action: PayloadAction<SetYesOrNoContinueType>\n    ) => {\n      state.gameManager.gameState = action.payload.gameState;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n      action.payload?.trenchCoat &&\n        (state.trenchCoat = action.payload?.trenchCoat);\n    },\n    setExitChase: (state, action: PayloadAction<SetExitChaseResponseTyppe>) => {\n      action.payload?.location && (state.location = action.payload?.location);\n      action.payload?.day && (state.gameManager.day = action.payload?.day);\n      state.gameManager.gameState = action.payload.gameState;\n      state.gameManager.gameSubMenu = action.payload?.gameSubMenu;\n      action.payload?.prices && (state.prices = action.payload?.prices);\n      action.payload?.debt && (state.stash.debt = action.payload?.debt);\n      action.payload?.bank && (state.stash.bank = action.payload?.bank);\n      action.payload?.systemMessage &&\n        (state.gameManager.systemMessage = action.payload?.systemMessage);\n      action.payload?.trenchCoat &&\n        (state.trenchCoat = action.payload?.trenchCoat);\n    },\n    setStash: (state, action: PayloadAction<StashStateType>) => {\n      state.stash = action.payload;\n    },\n    setCornDogs: (state, action: PayloadAction<number>) => {\n      state.trenchCoat.cornDogs = action.payload;\n    },\n    setTransferItemToStashResponse: (\n      state,\n      action: PayloadAction<SetTransferItemToStashResponseType>\n    ) => {\n      state.stash = action.payload.stash;\n      state.trenchCoat = action.payload.trenchCoat;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n    },\n    setTransferItemToTrenchCoatResponse: (\n      state,\n      action: PayloadAction<SetTransferItemToTrenchCoatResponseType>\n    ) => {\n      state.stash = action.payload.stash;\n      state.trenchCoat = action.payload.trenchCoat;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n      state.gameManager.currentItem = action.payload.currentItem;\n    },\n    setTrenchCoat: (state, action: PayloadAction<TrenchCoatStateType>) => {\n      state.trenchCoat = action.payload;\n    },\n    setLocation: (state, action: PayloadAction<string>) => {\n      state.location = action.payload;\n    },\n    setDay: (state, action: PayloadAction<number>) => {\n      state.gameManager.day = action.payload;\n    },\n    setCurrentItem: (state, action: PayloadAction<string>) => {\n      state.gameManager.currentItem = action.payload;\n    },\n    setChaseResponse: (state, action: PayloadAction<RunResponseStateType>) => {\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n      state.chase = action.payload.chase;\n      state.gameManager.systemMessage = action.payload.systemMessage;\n    },\n    setItemToTransfer: (\n      state,\n      action: PayloadAction<SetItemToTransferType>\n    ) => {\n      state.gameManager.currentItem = action.payload.currentItem;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n    },\n    setRepayBorrowSharkResponse: (\n      state,\n      action: PayloadAction<SetRepayBorrowSharkResponseType>\n    ) => {\n      state.stash.debt = action.payload.debt;\n      state.trenchCoat.cash = action.payload.cash;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n    },\n    setDepositWithdrawBankResponse: (\n      state,\n      action: PayloadAction<SetDepositWithdrawBankResponseType>\n    ) => {\n      state.stash.bank = action.payload.bank;\n      state.trenchCoat.cash = action.payload.cash;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n    },\n    setDepositWithdrawBankResponseConclusion: (\n      state,\n      action: PayloadAction<SetDepositWithdrawBankResponseConclusionType>\n    ) => {\n      state.stash.bank = action.payload.bank;\n      state.trenchCoat.cash = action.payload.cash;\n      state.gameManager.gameSubMenu = action.payload.gameSubMenu;\n      state.gameManager.gameState = action.payload.gameState;\n    },\n    setMaximumBuy: (state, action: PayloadAction<MaximumBuyStateType>) => {\n      state.gameManager.maximumBuy = action.payload.maximumBuy;\n      state.gameManager.currentItem = action.payload.currentItem;\n    },\n    setBuySellResponse: (\n      state,\n      action: PayloadAction<BuySellResponseStateType>\n    ) => {\n      state.trenchCoat = action.payload.trenchCoat;\n      state.gameManager.maximumBuy = action.payload.maximumBuy;\n      state.gameManager.currentItem = action.payload.currentItem;\n      state.gameManager.gameState = action.payload.gameState;\n    },\n    setLocationResponse: (\n      state,\n      action: PayloadAction<SetLocationResponseType>\n    ) => {\n      action.payload?.location && (state.location = action.payload.location);\n      action.payload?.day && (state.gameManager.day = action.payload.day);\n      state.gameManager.gameState = action.payload.gameState;\n      state.gameManager.gameSubMenu = action.payload?.gameSubMenu;\n      action.payload?.prices && (state.prices = action.payload.prices);\n      action.payload?.debt && (state.stash.debt = action.payload.debt);\n      action.payload?.bank && (state.stash.bank = action.payload.bank);\n      action.payload?.systemMessage &&\n        (state.gameManager.systemMessage = action.payload.systemMessage);\n      action.payload?.trenchCoat &&\n        (state.trenchCoat = action.payload?.trenchCoat);\n    },\n  },\n});\n\n//actions\nexport const {\n  setPrices,\n  setGameState,\n  setStash,\n  setTrenchCoat,\n  setLocation,\n  setLocationResponse,\n  setDay,\n  setMaximumBuy,\n  setBuySellResponse,\n  setCurrentItem,\n  setGameSubMenu,\n  setGameStateAndSubMenu,\n  setRepayBorrowSharkResponse,\n  setDepositWithdrawBankResponse,\n  setDepositWithdrawBankResponseConclusion,\n  setTransferItemToStashResponse,\n  setTransferItemToTrenchCoatResponse,\n  setItemToTransfer,\n  setChase,\n  setChaseResponse,\n  setCornDogs,\n  setExitChase,\n  setYesOrNoContinue,\n} = fleaMarketSlice.actions;\n\n//selectors\nexport const selectPrices = (state: RootState) => state.fleaMarket.prices;\nexport const selectStash = (state: RootState) => state.fleaMarket.stash;\nexport const selectLocation = (state: RootState) => state.fleaMarket.location;\nexport const selectTrenchCoat = (state: RootState) =>\n  state.fleaMarket.trenchCoat;\nexport const selectGameState = (state: RootState) =>\n  state.fleaMarket.gameManager.gameState;\nexport const selectGameSubMenu = (state: RootState) =>\n  state.fleaMarket.gameManager.gameSubMenu;\nexport const selectDay = (state: RootState) => state.fleaMarket.gameManager.day;\nexport const selectMaximumBuy = (state: RootState) =>\n  state.fleaMarket.gameManager.maximumBuy;\nexport const selectCurrentItem = (state: RootState) =>\n  state.fleaMarket.gameManager.currentItem;\nexport const selectSystemMessage = (state: RootState) =>\n  state.fleaMarket.gameManager.systemMessage;\nexport const selectDebt = (state: RootState) => state.fleaMarket.stash.debt;\nexport const selectBank = (state: RootState) => state.fleaMarket.stash.bank;\nexport const selectCash = (state: RootState) =>\n  state.fleaMarket.trenchCoat.cash;\nexport const selectStooges = (state: RootState) =>\n  state.fleaMarket.chase.stooges;\nexport const selectHealth = (state: RootState) => state.fleaMarket.chase.health;\nexport const selectCornDogs = (state: RootState) =>\n  state.fleaMarket.trenchCoat.cornDogs;\n\nexport default fleaMarketSlice.reducer;\n","import { keyframes } from \"styled-components\";\n\nexport const cursorBlinkAnimation = keyframes`\n0% {\n  opacity: 1;\n}\n50% {\n  opacity: 1;\n}\n100% {\n  opacity: 0;\n}\n`;\n","import { cursorBlinkAnimation } from \"./animations\";\nimport styled from \"styled-components\";\n\nexport const StyledCursor = styled.span`\n  animation: ${cursorBlinkAnimation} 2s infinite;\n`;\n\nexport const StyledCursorWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  right: 190px;\n  top: 19px;\n  font-size: 18px;\n  color: #00ff41;\n`;\n\nexport const GreyText = styled.div`\n  color: grey;\n`;\n","interface FuncType {\n  function: string;\n  params?: {\n    item?: string;\n    amount?: number;\n    value?: string;\n    money?: number;\n    amountChange?: number;\n    key?: string;\n  };\n}\n\nconst env = process.env.NODE_ENV;\n// const serverAddress =\n//   env === \"development\" ? \"http://localhost:5000/api\" : \"/api\";\nconsole.log(env);\nconst serverAddress =\n  env === \"development\"\n    ? \"http://localhost:5000/api\"\n    : \"https://flea-market-game.herokuapp.com/api\";\n\n//const serverAddress = \"http://localhost:8000/api/\";\n\nexport const sendFunctionRequest = async (func: FuncType) => {\n  const response = await fetch(serverAddress, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      function: func.function,\n      ...(func.params && { params: func.params }),\n    }),\n    credentials: \"include\",\n  });\n  const data = await response.json();\n  return data;\n};\n","import { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport { memo, useCallback, useEffect } from \"react\";\nimport { useAppDispatch } from \"../../../app/hooks\";\nimport {\n  StyledCursor,\n  StyledCursorWrapper,\n} from \"../../../styles/commonStyles\";\n\n//redux action uses ActionCreatorWithPayload<any, string> because I cant figure out how\n//to union ActionCreatorWithPayload<number, string> and ActionCreatorWithPayload<string, string>\ninterface InputPropsType {\n  gameFunction: (key: string) => Promise<any>;\n  reduxAction: ActionCreatorWithPayload<any, string>;\n  allowableKeys?: string[];\n}\n\n/**\n *\n * gameFunction:function to call on server\n * reduxAction: action to store function return in redux store\n * allowableKeys: keys that will send request, if this is not supplied all keys will accepted to send request\n *\n * @returns void\n */\nconst Input = ({\n  gameFunction,\n  reduxAction,\n  allowableKeys,\n}: InputPropsType) => {\n  const dispatch = useAppDispatch();\n  const handleKeyDown = useCallback(\n    async (e: KeyboardEvent) => {\n      if (\n        allowableKeys === undefined ||\n        allowableKeys.find((allowableKey) => allowableKey === e.key)\n      ) {\n        document.body.removeEventListener(\"keydown\", handleKeyDown);\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.repeat) {\n          const gameFunctionReturn = await gameFunction(e.key);\n          dispatch(reduxAction(gameFunctionReturn));\n        }\n      }\n    },\n    [allowableKeys, dispatch, gameFunction, reduxAction]\n  );\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <StyledCursorWrapper>\n      <span>{\">\"}</span>\n      <StyledCursor>{\"_\"}</StyledCursor>\n    </StyledCursorWrapper>\n  );\n};\n\nexport default memo(Input);\n","import { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport Input from \"../Common/Input\";\n\ninterface PromptDataType {\n  promptText: string;\n  promptFunction: (key: string) => Promise<any>;\n  promptReduxAction: ActionCreatorWithPayload<any>;\n  allowableKeys?: string[];\n}\n\nconst Prompt = ({\n  promptText,\n  promptFunction,\n  promptReduxAction,\n  allowableKeys,\n}: PromptDataType) => {\n  return (\n    <div>\n      {promptText}\n      <Input\n        gameFunction={promptFunction}\n        reduxAction={promptReduxAction}\n        allowableKeys={allowableKeys ? allowableKeys : undefined}\n      />\n    </div>\n  );\n};\nexport default Prompt;\n","import { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectCornDogs,\n  selectHealth,\n  selectStooges,\n  setChase,\n  setCornDogs,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\n\nconst getChase = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_CHASE,\n  });\n};\n\nconst getCornDogs = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_CORN_DOGS,\n  });\n};\n\nconst StyledSpan = styled.span`\n  margin: 10px;\n  color: darksalmon;\n`;\n\nconst ChaseHUD = () => {\n  const dispatch = useAppDispatch();\n\n  const stoogeData = useAppSelector(selectStooges);\n  const healthData = useAppSelector(selectHealth);\n  const cornDogData = useAppSelector(selectCornDogs);\n\n  const [showChaseData, setShowChaseData] = useState(false);\n  const [showCornDogs, setShowCornDogsData] = useState(false);\n\n  const fetchChase = useCallback(async () => {\n    const gameState = await getChase();\n    dispatch(setChase(gameState));\n    setShowChaseData(true);\n  }, [dispatch]);\n\n  const fetchCornDogs = useCallback(async () => {\n    const gameState = await getCornDogs();\n    dispatch(setCornDogs(gameState));\n    setShowCornDogsData(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchChase();\n    fetchCornDogs();\n  }, [fetchChase, fetchCornDogs]);\n\n  return (\n    <div>\n      {showChaseData && showCornDogs && (\n        <div>\n          <StyledSpan>Health: {healthData}%</StyledSpan>\n          <StyledSpan>Stooges: {stoogeData}</StyledSpan>\n          <StyledSpan>Corndogs: {cornDogData}</StyledSpan>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ChaseHUD;\n","import { memo } from \"react\";\nimport {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  spaceBarKey,\n  yOrN,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectGameSubMenu,\n  selectSystemMessage,\n  setExitChase,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Prompt from \"../Input/Prompt\";\n\nconst runOrBribeContinueFunction = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.RUN_OR_BRIBE_CONTINUE,\n  });\n};\n\nconst healFunction = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.HEAL,\n  });\n};\n\nconst ChaseResult = () => {\n  const systemMessage = useAppSelector(selectSystemMessage);\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n\n  return (\n    <div>\n      {gameSubMenu === GameSubMenuEnum.CHASE_RESULT && (\n        <div>\n          <div>{systemMessage}</div>\n          <GreyText>\n            <Prompt\n              promptText={\"PRESS SPACE BAR TO CONTINUE\"}\n              promptFunction={runOrBribeContinueFunction}\n              promptReduxAction={setExitChase}\n              allowableKeys={spaceBarKey}\n            />\n          </GreyText>\n        </div>\n      )}\n      {gameSubMenu === GameSubMenuEnum.HEAL && (\n        <div>\n          <div>{systemMessage}</div>\n          <GreyText>\n            <Prompt\n              promptText={\"PRESS (Y) TO HEAL OR (N) TO DECLINE\"}\n              promptFunction={healFunction}\n              promptReduxAction={setExitChase}\n              allowableKeys={yOrN}\n            />\n          </GreyText>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChaseResult);\n","import { memo } from \"react\";\nimport {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  runOrBribeKeys,\n  spaceBarKey,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectGameSubMenu,\n  selectStooges,\n  setGameStateAndSubMenu,\n  setChaseResponse,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Prompt from \"../Input/Prompt\";\nimport ChaseHUD from \"./ChaseHUD\";\nimport ChaseResult from \"./ChaseResult\";\n\nexport const chaseStartFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.START_CHASE,\n  });\n};\n\nconst chaseRunFunction = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.RUN,\n  });\n};\n\nconst runOrBribeFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.RUN_OR_BRIBE,\n    params: { key: key },\n  });\n};\n\nconst Chase = () => {\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n  const stoogesData = useAppSelector(selectStooges);\n\n  const chaseStartText = (stoogesData: number): string => {\n    if (stoogesData === 0) {\n      return \"YOU ARE GETTING PULLED OVER FOR NO REASON BY THE CHAIRMAN OF THE FLEA MARKET GUILD\";\n    }\n    if (stoogesData === 1) {\n      return `YOU ARE GETTING PULLED OVER FOR NO REASON BY THE CHAIRMAN OF THE FLEA MARKET GUILD AND ${stoogesData} FLEA MARKET STOOGE`;\n    } else {\n      return `YOU ARE GETTING PULLED OVER FOR NO REASON BY THE CHAIRMAN OF THE FLEA MARKET GUILD AND ${stoogesData} FLEA MARKET STOOGES`;\n    }\n  };\n\n  return (\n    <div>\n      <ChaseHUD />\n      {gameSubMenu === GameSubMenuEnum.CHASE_START && (\n        <div>\n          <div>{chaseStartText(stoogesData)}</div>\n          <GreyText>\n            <Prompt\n              promptText={\"PRESS SPACEBAR TO CONTINUE\"}\n              promptFunction={chaseStartFunction}\n              promptReduxAction={setGameStateAndSubMenu}\n              allowableKeys={spaceBarKey}\n            />\n          </GreyText>\n        </div>\n      )}\n      {gameSubMenu === GameSubMenuEnum.RUN && (\n        <GreyText>\n          <Prompt\n            promptText={\n              \"YOU HAVE NO CORNDOGS TO BRIBE WITH.. PRESS SPACE BAR TO RUN\"\n            }\n            promptFunction={chaseRunFunction}\n            promptReduxAction={setChaseResponse}\n            allowableKeys={spaceBarKey}\n          />\n        </GreyText>\n      )}\n      {gameSubMenu === GameSubMenuEnum.RUN_OR_BRIBE && (\n        <GreyText>\n          <Prompt\n            promptText={\"WILL YOU (R)UN OR (B)RIBE?\"}\n            promptFunction={runOrBribeFunction}\n            promptReduxAction={setChaseResponse}\n            allowableKeys={runOrBribeKeys}\n          />\n        </GreyText>\n      )}\n      {(GameSubMenuEnum.CHASE_RESULT ||\n        gameSubMenu === GameSubMenuEnum.HEAL) && <ChaseResult />}\n    </div>\n  );\n};\n\nexport default memo(Chase);\n","import { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport { memo, useCallback, useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks\";\nimport { selectCurrentItem } from \"../../../redux/slices/fleaMarketSlice\";\nimport {\n  StyledCursor,\n  StyledCursorWrapper,\n} from \"../../../styles/commonStyles\";\n\ninterface InputStringPropsType {\n  gameFunction: any;\n  reduxAction: ActionCreatorWithPayload<any, string>;\n  allowableKeys: string[];\n  comparator?: number;\n  inputIsString?: boolean;\n}\n\nconst InputString = ({\n  gameFunction,\n  reduxAction,\n  allowableKeys,\n  comparator,\n  inputIsString,\n}: InputStringPropsType) => {\n  const currentItem = useAppSelector(selectCurrentItem);\n\n  const [input, setInput] = useState(\"\");\n\n  const allowableKey = (key: string, allowableKeys: string[]) => {\n    if (allowableKeys.find((e) => e === key)) {\n      return true;\n    }\n  };\n\n  const dispatch = useAppDispatch();\n\n  /**\n   * @param e - keyboard event\n   * event listener will call setInput which will update input state\n   * when input state is updated handleKeyDown function will be re created\n   * when handleKeyDown function is recreated useEffect will be called again\n   * this would add duplicate event listeners unless they were removed after each key stroke\n   *\n   */\n  const handleKeyDown = useCallback(\n    async (e: KeyboardEvent) => {\n      if (\n        allowableKeys.find((allowableKey) => allowableKey === e.key) ||\n        e.key === \"Enter\" ||\n        e.key === \"Backspace\"\n      ) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === \"Backspace\" && input.length > 0) {\n          if (input.length > 0) {\n            document.body.removeEventListener(\"keydown\", handleKeyDown);\n            setInput((prevState) => {\n              return prevState.slice(0, -1);\n            });\n          }\n          return;\n        }\n        if (allowableKey(e.key, allowableKeys) && input.length < 65) {\n          document.body.removeEventListener(\"keydown\", handleKeyDown);\n          setInput((prevState) => prevState + e.key);\n          return;\n        }\n        if (e.key === \"Enter\" && input.length > 0) {\n          document.body.removeEventListener(\"keydown\", handleKeyDown);\n          //if gameFunction has 2 arguments, send both currentItem and amount\n          //else, just send 1 argument for amount\n          //if comparator is passed, perform validation\n          if (comparator === undefined || parseInt(input) <= comparator) {\n            const gameFunctionReturn =\n              gameFunction.length === 2\n                ? await gameFunction(currentItem, parseInt(input))\n                : await gameFunction(inputIsString ? input : parseInt(input));\n            dispatch(reduxAction(gameFunctionReturn));\n            return;\n          } else {\n            setInput(() => \"\");\n          }\n        }\n      }\n    },\n    [\n      allowableKeys,\n      comparator,\n      currentItem,\n      dispatch,\n      gameFunction,\n      input,\n      inputIsString,\n      reduxAction,\n    ]\n  );\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <StyledCursorWrapper>\n      <span>{`>${input}`}</span>\n      <StyledCursor>_</StyledCursor>\n    </StyledCursorWrapper>\n  );\n};\nexport default memo(InputString);\n","import { memo, useCallback } from \"react\";\nimport {\n  FleaMarketFunction,\n  itemAllowableKeys,\n  numberKeys,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\n\nimport {\n  selectCurrentItem,\n  selectMaximumBuy,\n  setBuySellResponse,\n  setMaximumBuy,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\nimport InputString from \"../Common/InputString\";\n\nconst checkMaximumBuy = async (value: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.CHECK_MAXIMUM_BUY,\n    params: { value: value },\n  });\n};\n\nconst Buy = () => {\n  const buyItem = useCallback(async (item: string, amount: number) => {\n    return await sendFunctionRequest({\n      function: FleaMarketFunction.BUY_ITEM,\n      params: { item: item, amount: amount },\n    });\n  }, []);\n\n  const maxBuy = useAppSelector(selectMaximumBuy);\n  const currentItem = useAppSelector(selectCurrentItem);\n  return (\n    <div>\n      <GreyText>WHAT WILL YOU BUY?</GreyText>\n      {maxBuy === null && (\n        <Input\n          gameFunction={checkMaximumBuy}\n          reduxAction={setMaximumBuy}\n          allowableKeys={itemAllowableKeys}\n        />\n      )}\n      {maxBuy !== null && currentItem.length > 0 && (\n        <div>\n          <div>HOW MANY {currentItem.toUpperCase()} WILL YOU BUY?</div>\n          <div>YOU CAN AFFORD({maxBuy})</div>\n          <InputString\n            gameFunction={buyItem}\n            reduxAction={setBuySellResponse}\n            allowableKeys={numberKeys}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Buy);\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\nimport { setGameState } from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\n\nexport const buySellJetPrompt = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.BUY_SELL_JET,\n    params: { key: key },\n  });\n};\n\nconst StyledBuySellJet = styled.div`\n  position: relative;\n  bottom: 17px;\n  color: grey;\n`;\n\nconst buySellJetAllowableKeys = [\"b\", \"s\", \"j\", \"B\", \"S\", \"J\"];\n\nconst BuySellJet = () => {\n  return (\n    <StyledBuySellJet>\n      <span>WILL YOU (B)UY (S)ELL OR (J)ET?</span>\n      <Input\n        gameFunction={buySellJetPrompt}\n        reduxAction={setGameState}\n        allowableKeys={buySellJetAllowableKeys}\n      />\n    </StyledBuySellJet>\n  );\n};\n\nexport default memo(BuySellJet);\n","import { memo, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\n\nimport { setGameState } from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\n\nconst StyledUl = styled.ul`\n  list-style-type: none;\n`;\n\nconst instructionsContinue = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.INSTRUCTIONS_CONTINUE,\n    params: { key: key },\n  });\n};\n\nconst getInstructions = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_INSTRUCTIONS,\n  });\n};\n\nconst Instructions = () => {\n  const [instructions, setInstructions] = useState();\n\n  useEffect(() => {\n    const fetchInstructionsContent = async () => {\n      const instructionsContent = await getInstructions();\n      setInstructions(instructionsContent);\n    };\n    fetchInstructionsContent();\n  }, []);\n\n  return (\n    <div>\n      {instructions}\n      <StyledUl>\n        <li>DVDs: 10 - 60</li>\n        <li>Hot Sauce: 70 - 250</li>\n        <li>Switchblades: 300 - 900</li>\n        <li>Fake Shoes: 1000 - 4500</li>\n        <li>Cell Phones: 5000 - 14000</li>\n        <li>Massage Chairs: 15000 - 30000</li>\n      </StyledUl>\n      <GreyText>PRESS ANY KEY TO CONTINUE......</GreyText>\n      {instructions && (\n        <Input gameFunction={instructionsContinue} reduxAction={setGameState} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Instructions);\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\nimport { setLocationResponse } from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\n\nexport const jetPrompt = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.CHANGE_LOCATION,\n    params: { key: key },\n  });\n};\n\nconst StyledLocationDiv = styled.span`\n  display: inline-block;\n  text-align: left;\n  font-size: 15px;\n  margin-left: 30px;\n  margin-right: 30px;\n`;\n\nconst jetAllowableKeys = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n\nconst Jet = () => {\n  return (\n    <div>\n      <GreyText>WHERE TO DUDE:</GreyText>\n      <ul>\n        <StyledLocationDiv>\n          <li>(1) FLORIDA</li>\n          <li>(2) ASHBY BART FLEA MARKET</li>\n        </StyledLocationDiv>\n        <StyledLocationDiv>\n          <li>(3) SAN JOSE SUPER MALL</li>\n          <li>(4) SOLANO SWAP MEET</li>\n        </StyledLocationDiv>\n        <StyledLocationDiv>\n          <li>(5) COMMUNITY COLLEGE FLEA MARKET</li>\n          <li>(6) HAUNTED MALL</li>\n        </StyledLocationDiv>\n      </ul>\n      <Input\n        gameFunction={jetPrompt}\n        reduxAction={setLocationResponse}\n        allowableKeys={jetAllowableKeys}\n      />\n    </div>\n  );\n};\n\nexport default memo(Jet);\n","import {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  numberKeys,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectCash,\n  selectGameSubMenu,\n  setRepayBorrowSharkResponse,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport InputString from \"../Common/InputString\";\n\nconst repayShark = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.REPAY_SHARK,\n    params: { amount: amount },\n  });\n};\n\nconst borrowFromShark = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.BORROW_FROM_SHARK,\n    params: { amount: amount },\n  });\n};\n\nconst ManageShark = () => {\n  const currentCash = useAppSelector(selectCash);\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n  return (\n    <div>\n      {gameSubMenu === GameSubMenuEnum.SHARK && (\n        <div>\n          HOW MUCH TO REPAY?\n          <InputString\n            gameFunction={repayShark}\n            reduxAction={setRepayBorrowSharkResponse}\n            allowableKeys={numberKeys}\n            comparator={currentCash}\n          />\n        </div>\n      )}\n      {gameSubMenu === GameSubMenuEnum.SHARK_BORROW && (\n        //if shark is completely paid off can borrow 2000\n        <div>\n          HOW MUCH TO BORROW?\n          <InputString\n            gameFunction={borrowFromShark}\n            reduxAction={setRepayBorrowSharkResponse}\n            allowableKeys={numberKeys}\n            comparator={currentCash > 0 ? currentCash : 2000}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ManageShark;\n","import {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  numberKeys,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectBank,\n  selectCash,\n  selectGameSubMenu,\n  setDepositWithdrawBankResponse,\n  setDepositWithdrawBankResponseConclusion,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport InputString from \"../Common/InputString\";\n\nconst depositToBank = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.DEPOSIT_TO_BANK,\n    params: { amount: amount },\n  });\n};\n\nconst withdrawFromBank = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.WITHDRAW_FROM_BANK,\n    params: { amount: amount },\n  });\n};\n\nconst ManageBank = () => {\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n  const currentCash = useAppSelector(selectCash);\n  const currentBank = useAppSelector(selectBank);\n  return (\n    <div>\n      {gameSubMenu === GameSubMenuEnum.BANK && (\n        <div>\n          HOW MUCH TO DEPOSIT?\n          <InputString\n            gameFunction={depositToBank}\n            reduxAction={setDepositWithdrawBankResponse}\n            allowableKeys={numberKeys}\n            comparator={currentCash}\n          />\n        </div>\n      )}\n      {gameSubMenu === GameSubMenuEnum.BANK_WITHDRAW && (\n        <div>\n          HOW MUCH TO WITHDRAW?\n          <InputString\n            gameFunction={withdrawFromBank}\n            reduxAction={setDepositWithdrawBankResponseConclusion}\n            allowableKeys={numberKeys}\n            comparator={currentBank}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManageBank;\n","import {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  itemAllowableKeys,\n  numberKeys,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectCurrentItem,\n  selectGameSubMenu,\n  selectStash,\n  selectTrenchCoat,\n  setItemToTransfer,\n  setTransferItemToStashResponse,\n  setTransferItemToTrenchCoatResponse,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\nimport InputString from \"../Common/InputString\";\n\nconst selectItemToManage = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.SELECT_ITEM_TO_MANAGE,\n    params: { key: key },\n  });\n};\n\nconst transferItemToStash = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.TRANSFER_ITEM_TO_STASH,\n    params: { amount: amount },\n  });\n};\n\nconst transferItemToTrenchCoat = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.TRANSFER_ITEM_TO_TRENCH_COAT,\n    params: { amount: amount },\n  });\n};\n\nconst ManageStash = () => {\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n  const currentItem = useAppSelector(selectCurrentItem);\n  //added this typing to look up by key from appSelector\n  const currentStash: Record<string, any> = useAppSelector(selectStash);\n  const currentTrenchCoat: Record<string, any> =\n    useAppSelector(selectTrenchCoat);\n\n  const manageStashAllowableKeys = [\"Q\", \"q\"];\n  manageStashAllowableKeys.push(...itemAllowableKeys);\n\n  return (\n    <div>\n      {currentItem.length === 0 && gameSubMenu === GameSubMenuEnum.STASH && (\n        <div>\n          WHICH ITEM WOULD YOU LIKE TO TRANSFER? (PRESS (Q) TO STOP\n          TRANSFERRING)\n          <Input\n            gameFunction={selectItemToManage}\n            reduxAction={setItemToTransfer}\n            allowableKeys={manageStashAllowableKeys}\n          />\n        </div>\n      )}\n      {currentItem.length > 0 && gameSubMenu === GameSubMenuEnum.STASH && (\n        <div>\n          HOW MANY {currentItem.toUpperCase()} TO STASH?\n          <InputString\n            gameFunction={transferItemToStash}\n            reduxAction={setTransferItemToStashResponse}\n            allowableKeys={numberKeys}\n            comparator={currentTrenchCoat[currentItem]}\n          />\n        </div>\n      )}\n      {currentItem.length > 0 &&\n        gameSubMenu === GameSubMenuEnum.TRANSFER_TO_TRENCH_COAT && (\n          <div>\n            HOW MANY {currentItem.toUpperCase()} TO TRENCH COAT?\n            <InputString\n              gameFunction={transferItemToTrenchCoat}\n              reduxAction={setTransferItemToTrenchCoatResponse}\n              allowableKeys={numberKeys}\n              comparator={currentStash[currentItem]}\n            />\n          </div>\n        )}\n    </div>\n  );\n};\nexport default ManageStash;\n","import {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  yOrN,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectGameSubMenu,\n  setGameStateAndSubMenu,\n  setGameSubMenu,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Prompt from \"./Prompt\";\nimport ManageShark from \"./ManageShark\";\nimport ManageBank from \"./ManageBank\";\nimport ManageStash from \"./ManageStash\";\nimport { GreyText } from \"../../../styles/commonStyles\";\n\nconst sharkContinueFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.SHARK_CONTINUE,\n    params: { key: key },\n  });\n};\n\nconst stashContinueFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.STASH_CONTINUE,\n    params: { key: key },\n  });\n};\n\nconst bankContinueFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.BANK_CONTINUE,\n    params: { key: key },\n  });\n};\n\nconst ManageInventory = () => {\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n\n  return (\n    <GreyText>\n      {gameSubMenu === GameSubMenuEnum.PROMPT_FOR_SHARK && (\n        <Prompt\n          promptText={\"DO YOU WISH TO VISIT THE LOAN SHARK?\"}\n          promptFunction={sharkContinueFunction}\n          promptReduxAction={setGameSubMenu}\n          allowableKeys={yOrN}\n        />\n      )}\n      {gameSubMenu === GameSubMenuEnum.PROMPT_FOR_STASH && (\n        <Prompt\n          promptText={\"DO YOU WISH TO TRANSFER ITEMS TO YOUR STASH?\"}\n          promptFunction={stashContinueFunction}\n          promptReduxAction={setGameSubMenu}\n          allowableKeys={yOrN}\n        />\n      )}\n      {gameSubMenu === GameSubMenuEnum.PROMPT_FOR_BANK && (\n        <Prompt\n          promptText={\"DO YOU WISH TO VISIT THE BANK?\"}\n          promptFunction={bankContinueFunction}\n          promptReduxAction={setGameStateAndSubMenu}\n          allowableKeys={yOrN}\n        />\n      )}\n      {(gameSubMenu === GameSubMenuEnum.SHARK ||\n        GameSubMenuEnum.SHARK_BORROW) && <ManageShark />}\n      {(gameSubMenu === GameSubMenuEnum.STASH ||\n        gameSubMenu === GameSubMenuEnum.TRANSFER_TO_TRENCH_COAT) && (\n        <ManageStash />\n      )}\n      {(gameSubMenu === GameSubMenuEnum.BANK ||\n        GameSubMenuEnum.BANK_WITHDRAW) && <ManageBank />}\n    </GreyText>\n  );\n};\nexport default ManageInventory;\n\n//when you jet to Florida game state be set to manageInventory rather than buy sell rec.. gameSubMenu will be blank\n//manage inventory will not be changed until you complete all three prompts for shark, bank and stash\n//shark bank and stash will be shown based on gameSubMenu state\n//answering no to stash or exiting stash will clear subGameMenu state and change gameState to buy sell rec\n","import { useCallback } from \"react\";\nimport {\n  FleaMarketFunction,\n  itemAllowableKeys,\n  numberKeys,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectCurrentItem,\n  setBuySellResponse,\n  setCurrentItem,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\nimport InputString from \"../Common/InputString\";\n\nconst stageCurrentItem = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.STAGE_CURRENT_ITEM,\n    params: { key: key },\n  });\n};\n\nconst Sell = () => {\n  const sellItem = useCallback(async (item: string, amount: number) => {\n    return await sendFunctionRequest({\n      function: FleaMarketFunction.SELL_ITEM,\n      params: { item: item, amount: amount },\n    });\n  }, []);\n\n  const currentItem = useAppSelector(selectCurrentItem);\n  return (\n    <div>\n      <GreyText>WHAT WILL YOU SELL? </GreyText>\n      {currentItem.length === 0 && (\n        <div>\n          <Input\n            gameFunction={stageCurrentItem}\n            reduxAction={setCurrentItem}\n            allowableKeys={itemAllowableKeys}\n          />\n        </div>\n      )}\n      {currentItem.length > 0 && (\n        <div>\n          <div>HOW MANY {currentItem.toUpperCase()} WILL YOU SELL?</div>\n          <InputString\n            gameFunction={sellItem}\n            reduxAction={setBuySellResponse}\n            allowableKeys={numberKeys}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sell;\n","import { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\n\ninterface HighScoresType {\n  user_name: string;\n  score: number;\n}\nconst getHighScores = async (amount: number) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_HIGH_SCORES,\n    params: { amount: amount },\n  });\n};\n\nconst creditRoll = keyframes`\n0% {\n  transform: translateY(-70%);\n}\n100% {\n  transform: translateY(0%);\n}\n`;\n\n//see if we can get this to auto scroll near the bottom of page\nconst StyledHighScoreWrapper = styled.div`\n  margin-top: 0px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 120px;\n  overflow: hidden;\n  position: relative;\n  z-index: 1;\n`;\n\nconst StyledScores = styled.div`\n  text-align: center;\n  animation: ${creditRoll} 10s;\n  position: relative;\n  z-index: 0;\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n\nconst StyledTitle = styled.div`\n  font-size: 25px;\n`;\n\nconst StyledHighScores = styled.div`\n  position: relative;\n  top: 130px;\n  color: grey;\n`;\n\nconst StyledScoreLine = styled.ol`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 15px;\n`;\n\nexport const HighScores = () => {\n  const [highScores, setHighScores] = useState<null | HighScoresType[]>(null);\n\n  const fetchHighScores = useCallback(async () => {\n    //pass number of high scores to display here\n    const highScores = await getHighScores(10);\n    setHighScores(highScores);\n  }, []);\n\n  useEffect(() => {\n    fetchHighScores();\n  }, [fetchHighScores]);\n\n  // const highScores = [\n  //   {\n  //     user_name: \"longnamehignamrelongnamehignamrelongnamehignamre\",\n  //     score: 5000,\n  //   },\n  //   { user_name: \"longnamehighscore2\", score: 5100 },\n  //   { user_name: \"longnamehighscore3\", score: 5000 },\n  //   { user_name: \"longnazscore4\", score: 5100 },\n  //   { user_name: \"longnamehighscore5\", score: 5000 },\n  //   { user_name: \"longnamehighscore6\", score: 5100 },\n  //   { user_name: \"longnamehighscore7\", score: 5000 },\n  //   { user_name: \"zzzzzzz8\", score: 5100 },\n  //   { user_name: \"9\", score: 5000 },\n  //   { user_name: \"10\", score: 5100 },\n  // ];\n\n  return (\n    <StyledHighScores>\n      {highScores && (\n        <div>\n          <StyledTitle>HIGH SCORES</StyledTitle>\n          <StyledHighScoreWrapper>\n            <StyledScores>\n              {highScores.map((highScore, index) => (\n                <StyledScoreLine\n                  key={index}\n                >{`${highScore.user_name}: ${highScore.score}`}</StyledScoreLine>\n              ))}\n            </StyledScores>\n          </StyledHighScoreWrapper>\n        </div>\n      )}\n    </StyledHighScores>\n  );\n};\n\nexport default memo(HighScores);\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { FleaMarketFunction, yOrN } from \"../../../app/constants\";\nimport { setGameState } from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Input from \"../Common/Input\";\nimport { HighScores } from \"../View/HighScores\";\n\nconst instructionsPrompt = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.INSTRUCTIONS_PROMPT,\n    params: { key: key },\n  });\n};\n\nconst StyledMainTitle = styled.div`\n  margin-top: 10px;\n  margin-bottom: 0px;\n  font-size: 65px;\n`;\n\nconst StyledTitle = styled.div`\n  margin-top: 10px;\n  margin-bottom: 0px;\n  font-size: 35px;\n`;\n\nconst Title = () => {\n  return (\n    <div>\n      <StyledMainTitle>FLEA MARKET</StyledMainTitle>\n      <StyledTitle>A GAME BASED ON</StyledTitle>\n      <StyledTitle>ACTUAL FLEA MARKET EXPERIENCES</StyledTitle>\n      <StyledTitle>BY FSPANTHOR</StyledTitle>\n      <StyledTitle>COPYRIGHT (2022)</StyledTitle>\n      <StyledTitle>DO YOU WANT INSTRUCTIONS? PRESS (Y) OR (N) KEY</StyledTitle>\n      <Input\n        gameFunction={instructionsPrompt}\n        reduxAction={setGameState}\n        allowableKeys={yOrN}\n      />\n      <HighScores />\n    </div>\n  );\n};\n\nexport default memo(Title);\n","import { memo } from \"react\";\nimport {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  spaceBarKey,\n  yOrN,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectGameSubMenu,\n  selectSystemMessage,\n  setGameStateAndSubMenu,\n  setYesOrNoContinue,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { GreyText } from \"../../../styles/commonStyles\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport Prompt from \"./Prompt\";\n\nconst eventContinueFunction = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.EVENT_CONTINUE,\n  });\n};\n\nconst eventYesOrNoFunction = async (key: string) => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.YES_OR_NO_CONTINUE,\n    params: { key: key },\n  });\n};\n\nconst Event = () => {\n  const systemMessage = useAppSelector(selectSystemMessage);\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n\n  return (\n    <div>\n      <div>\n        {gameSubMenu !== GameSubMenuEnum.YES_OR_NO_EVENT && (\n          <div>\n            <GreyText>{systemMessage}</GreyText>\n            <Prompt\n              promptText={\"PRESS SPACE BAR TO CONTINUE\"}\n              promptFunction={eventContinueFunction}\n              promptReduxAction={setGameStateAndSubMenu}\n              allowableKeys={spaceBarKey}\n            />\n          </div>\n        )}\n        {gameSubMenu === GameSubMenuEnum.YES_OR_NO_EVENT && (\n          <div>\n            <GreyText>{systemMessage}</GreyText>\n            <Prompt\n              promptText={\"PRESS (Y) OR (N)\"}\n              promptFunction={eventYesOrNoFunction}\n              promptReduxAction={setYesOrNoContinue}\n              allowableKeys={yOrN}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Event);\n","import { memo, useCallback } from \"react\";\nimport {\n  FleaMarketFunction,\n  GameSubMenuEnum,\n  lowercaseLetters,\n  numberKeys,\n  spaceBarKey,\n  specialCharacters,\n  uppercaseLetters,\n} from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport {\n  selectGameSubMenu,\n  setGameStateAndSubMenu,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport InputString from \"../Common/InputString\";\nimport Prompt from \"./Prompt\";\n\nconst restartGameFunction = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.RESTART_GAME,\n  });\n};\n\nconst GameOver = () => {\n  const persistHighScoreFunction = useCallback(async (value: string) => {\n    return await sendFunctionRequest({\n      function: FleaMarketFunction.PERSIST_HIGH_SCORE,\n      params: { value: value },\n    });\n  }, []);\n\n  const gameSubMenu = useAppSelector(selectGameSubMenu);\n\n  return (\n    <div>\n      <div>\n        GAME OVER\n        <div>\n          {gameSubMenu === GameSubMenuEnum.HIGH_SCORE && (\n            <div>\n              <span>HIGH SCORE!! ENTER YOUR NAME TO RECORD YOUR SCORE: </span>\n              <InputString\n                gameFunction={persistHighScoreFunction}\n                reduxAction={setGameStateAndSubMenu}\n                allowableKeys={[\n                  ...lowercaseLetters,\n                  ...uppercaseLetters,\n                  ...numberKeys,\n                  ...specialCharacters,\n                  ...spaceBarKey,\n                ]}\n                inputIsString={true}\n              />\n            </div>\n          )}\n          {gameSubMenu === GameSubMenuEnum.WIN && (\n            <div>\n              <span>\n                LOOKS LIKE YOU MANAGED TO PAY OFF THE SHARK! YOU WIN! PLAY AGAIN\n                TO TRY TO GET A HIGH SCORE AND IMPRESS YOUR FRIENDS.\n              </span>\n              <Prompt\n                promptText={\"PRESS SPACE BAR TO QUIT TO MAIN MENU\"}\n                promptFunction={restartGameFunction}\n                promptReduxAction={setGameStateAndSubMenu}\n                allowableKeys={spaceBarKey}\n              />\n            </div>\n          )}\n          {gameSubMenu === GameSubMenuEnum.CLEAR && (\n            <div>\n              <span>\n                L. PAY OFF THE SHARK AND SURVIVE 30 DAYS TO WIN. DONT GIVE UP.\n              </span>\n              <Prompt\n                promptText={\"PRESS SPACE BAR TO QUIT TO MAIN MENU\"}\n                promptFunction={restartGameFunction}\n                promptReduxAction={setGameStateAndSubMenu}\n                allowableKeys={spaceBarKey}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(GameOver);\n","import { memo } from \"react\";\nimport { GameStateEnum } from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport { selectGameState } from \"../../../redux/slices/fleaMarketSlice\";\nimport Chase from \"../Chase/Chase\";\nimport Buy from \"./Buy\";\nimport BuySellJet from \"./BuySellJet\";\nimport Instructions from \"./Instructions\";\nimport Jet from \"./Jet\";\nimport ManageInventory from \"./ManageInventory\";\nimport Sell from \"./Sell\";\nimport Title from \"./Title\";\nimport Event from \"./Event\";\nimport GameOver from \"./GameOver\";\nimport styled from \"styled-components\";\n\nconst StyledInteractive = styled.div`\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  display: flex;\n  text-align: center;\n  font-size 20px;\n`;\n\nconst Interactive = () => {\n  const gameState = useAppSelector(selectGameState);\n  console.log(\"gameState: \", gameState);\n  return (\n    <StyledInteractive>\n      {gameState === GameStateEnum.INIT && <Title />}\n      {gameState === GameStateEnum.INSTRUCTIONS && <Instructions />}\n      {gameState === GameStateEnum.MANAGE_INVENTORY && <ManageInventory />}\n      {gameState === GameStateEnum.BUY_SELL_JET && <BuySellJet />}\n      {gameState === GameStateEnum.JET && <Jet />}\n      {gameState === GameStateEnum.BUY && <Buy />}\n      {gameState === GameStateEnum.SELL && <Sell />}\n      {gameState === GameStateEnum.CHASE && <Chase />}\n      {gameState === GameStateEnum.EVENT && <Event />}\n      {gameState === GameStateEnum.GAME_OVER && <GameOver />}\n    </StyledInteractive>\n  );\n};\n\nexport default memo(Interactive);\n","import { memo } from \"react\";\nimport { PricesStateType } from \"../../../redux/slices/fleaMarketSlice\";\nimport styled from \"styled-components\";\n\ninterface priceDataType {\n  priceData: PricesStateType;\n}\n\nconst StyledPrices = styled.span`\n  display: block;\n  marker: none;\n`;\n\nconst StyledUl = styled.ul`\n  position: relative;\n  bottom: 10px;\n  list-style-type: none;\n`;\n\nconst StyledH3 = styled.h3`\n  font-size: 30px;\n  margin: 5px;\n`;\n\nconst Prices = ({ priceData }: priceDataType) => {\n  return (\n    <StyledPrices>\n      <StyledH3>Hey dude, the prices here are:</StyledH3>\n      <StyledUl>\n        <li>{`DVDs:  ${priceData.dvds}`}</li>\n        <li>{`Hot Sauce:  ${priceData.hotSauce}`}</li>\n        <li>{`Switchblades:  ${priceData.switchblades}`}</li>\n        <li>{`Fake Shoes:  ${priceData.fakeShoes}`}</li>\n        <li>{`Cell Phones:  ${priceData.cellPhones}`}</li>\n        <li>{`Massage Chairs:  ${priceData.massageChairs}`}</li>\n      </StyledUl>\n    </StyledPrices>\n  );\n};\n\nexport default memo(Prices);\n","import { memo } from \"react\";\nimport { StashStateType } from \"../../../redux/slices/fleaMarketSlice\";\nimport styled from \"styled-components\";\n\ninterface stashDataType {\n  stashData: StashStateType;\n}\n\nconst StyledStash = styled.span`\n  display: inline-block;\n  position: relative;\n  bottom 43px;\n`;\n\nconst StyledBankDebt = styled.div`\n  position: relative;\n  top: 20px;\n  color: darksalmon;\n`;\n\nconst StyledUl = styled.ul`\n  list-style-type: none;\n  margin: 10px;\n`;\n\nconst StyledH3 = styled.h3`\n  position: relative;\n  top: 18px;\n  font-size: 20px;\n  left: 17px;\n`;\n\nconst Stash = ({ stashData }: stashDataType) => {\n  return (\n    <StyledStash>\n      <StyledH3>Stash</StyledH3>\n      <StyledUl>\n        <li>{`DVDs:  ${stashData.dvds}`}</li>\n        <li>{`Hot Sauce:  ${stashData.hotSauce}`}</li>\n        <li>{`Switchblades:  ${stashData.switchblades}`}</li>\n        <li>{`Fake Shoes:  ${stashData.fakeShoes}`}</li>\n        <li>{`Cell Phones:  ${stashData.cellPhones}`}</li>\n        <li>{`Massage Chairs:  ${stashData.massageChairs}`}</li>\n        <StyledBankDebt>\n          <li>{`Bank:  ${stashData.bank}`}</li>\n          <li>{`Debt:  ${stashData.debt}`}</li>\n        </StyledBankDebt>\n      </StyledUl>\n    </StyledStash>\n  );\n};\n\nexport default memo(Stash);\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { TrenchCoatStateType } from \"../../../redux/slices/fleaMarketSlice\";\n\ninterface trenchCoatDataType {\n  trenchCoatData: TrenchCoatStateType;\n}\n\nconst StyledTrenchCoat = styled.span`\n  display: inline-block;\n  position: relative;\n  bottom: 22px;\n`;\n\nconst StyledUl = styled.ul`\n  margin: 10px;\n  list-style-type: none;\n`;\n\nconst StyledUtils = styled.div`\n  position: relative;\n  top: 20px;\n  color: darksalmon;\n`;\n\nconst StyledH3 = styled.h3`\n  position: relative;\n  top: 18px;\n  font-size: 20px;\n  left: 19px;\n`;\n\nconst TrenchCoat = ({ trenchCoatData }: trenchCoatDataType) => {\n  return (\n    <StyledTrenchCoat>\n      <StyledH3>Trench Coat</StyledH3>\n      <StyledUl>\n        <li>{`DVDs:  ${trenchCoatData.dvds}`}</li>\n        <li>{`Hot Sauce:  ${trenchCoatData.hotSauce}`}</li>\n        <li>{`Switchblades:  ${trenchCoatData.switchblades}`}</li>\n        <li>{`Fake Shoes:  ${trenchCoatData.fakeShoes}`}</li>\n        <li>{`Cell Phones:  ${trenchCoatData.cellPhones}`}</li>\n        <li>{`Massage Chairs:  ${trenchCoatData.massageChairs}`}</li>\n        <StyledUtils>\n          <li>{`Corn Dogs:  ${trenchCoatData.cornDogs}`}</li>\n          <li>{`Cash:  ${trenchCoatData.cash}`}</li>\n          <li>{`Max Hold:  ${trenchCoatData.maxHold}`}</li>\n        </StyledUtils>\n      </StyledUl>\n    </StyledTrenchCoat>\n  );\n};\nexport default memo(TrenchCoat);\n","import { memo } from \"react\";\n\ninterface LocationDataType {\n  locationData: string;\n}\n\n/**\n * @param location location in snake case\n * @returns location with first letter capitalied and spaces\n */\nconst formattedLocation = (location: string) => {\n  return (\n    location\n      // insert a space before all caps\n      .replace(/([A-Z])/g, \" $1\")\n      // uppercase the first character\n      .replace(/^./, function (str: string) {\n        return str.toUpperCase();\n      })\n  );\n};\n\nconst Location = ({ locationData }: LocationDataType) => {\n  return <div>Location: {formattedLocation(locationData)}</div>;\n};\nexport default memo(Location);\n","import { memo } from \"react\";\n\ninterface DateDataType {\n  dayData: number;\n}\n\nconst Date = ({ dayData }: DateDataType) => {\n  return (\n    <div>\n      {dayData !== 14\n        ? `Date: April ${dayData} 2001`\n        : `Date: Avril ${dayData} 2001`}\n    </div>\n  );\n};\nexport default memo(Date);\n","import { memo, useCallback, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks\";\n\nimport {\n  selectDay,\n  selectLocation,\n  selectPrices,\n  selectStash,\n  selectTrenchCoat,\n  setDay,\n  setLocation,\n  setPrices,\n  setStash,\n  setTrenchCoat,\n} from \"../../../redux/slices/fleaMarketSlice\";\nimport Prices from \"./Prices\";\nimport Stash from \"./Stash\";\nimport TrenchCoat from \"./TrenchCoat\";\nimport Location from \"./Location\";\nimport Date from \"./Date\";\nimport { sendFunctionRequest } from \"../../service/functionRequest\";\nimport { FleaMarketFunction } from \"../../../app/constants\";\nimport styled from \"styled-components\";\n\nconst getPrices = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_PRICES,\n  });\n};\n\nconst getStash = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_STASH,\n  });\n};\n\nconst getTrenchCoat = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_TRENCH_COAT,\n  });\n};\n\nconst getLocation = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_LOCATION,\n  });\n};\n\nconst getDay = async () => {\n  return await sendFunctionRequest({\n    function: FleaMarketFunction.GET_DAY,\n  });\n};\n\nconst StyledHUD = styled.div`\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  display: flex;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst StyledInventory = styled.div`\n  position: relative;\n  bottom: 31px;\n`;\n\nconst StyledLocationAndDate = styled.div`\n  position: relative;\n  bottom: 26px;\n  font-size: 15px;\n`;\n\nconst HUD = () => {\n  const dispatch = useAppDispatch();\n\n  const priceData = useAppSelector(selectPrices);\n  const stashData = useAppSelector(selectStash);\n  const trenchCoatData = useAppSelector(selectTrenchCoat);\n  const locationData = useAppSelector(selectLocation);\n  const dayData = useAppSelector(selectDay);\n\n  const [showPriceData, setShowPriceData] = useState(false);\n  const [showStashData, setShowStashData] = useState(false);\n  const [showTrenchCoatData, setShowTrenchCoatData] = useState(false);\n  const [showLocationData, setShowLocationData] = useState(false);\n  const [showDayData, setShowDayData] = useState(false);\n\n  const fetchPrices = useCallback(async () => {\n    const gameState = await getPrices();\n    dispatch(setPrices(gameState));\n    setShowPriceData(true);\n  }, [dispatch]);\n\n  const fetchStash = useCallback(async () => {\n    const stashState = await getStash();\n    dispatch(setStash(stashState));\n    setShowStashData(true);\n  }, [dispatch]);\n\n  const fetchTrenchCoat = useCallback(async () => {\n    const trenchCoatState = await getTrenchCoat();\n    dispatch(setTrenchCoat(trenchCoatState));\n    setShowTrenchCoatData(true);\n  }, [dispatch]);\n\n  const fetchLocation = useCallback(async () => {\n    const locationState = await getLocation();\n    dispatch(setLocation(locationState));\n    setShowLocationData(true);\n  }, [dispatch]);\n\n  const fetchDay = useCallback(async () => {\n    const dayState = await getDay();\n    dispatch(setDay(dayState));\n    setShowDayData(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchPrices();\n    fetchStash();\n    fetchTrenchCoat();\n    fetchLocation();\n    fetchDay();\n  }, [\n    dispatch,\n    fetchDay,\n    fetchLocation,\n    fetchPrices,\n    fetchStash,\n    fetchTrenchCoat,\n  ]);\n\n  return (\n    <StyledHUD>\n      {showPriceData && <Prices priceData={priceData} />}\n      <StyledInventory>\n        {showStashData && <Stash stashData={stashData} />}\n        {showTrenchCoatData && <TrenchCoat trenchCoatData={trenchCoatData} />}\n      </StyledInventory>\n      <StyledLocationAndDate>\n        {showLocationData && <Location locationData={locationData} />}\n        {showDayData && <Date dayData={dayData} />}\n      </StyledLocationAndDate>\n    </StyledHUD>\n  );\n};\nexport default memo(HUD);\n","export default __webpack_public_path__ + \"static/media/flea-market-theme.01434b8b.mp3\";","export default __webpack_public_path__ + \"static/media/flea-market-main.e2342b19.mp3\";","import { memo, useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { GameStateEnum } from \"../../../app/constants\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport { selectGameState } from \"../../../redux/slices/fleaMarketSlice\";\nimport fleaMarketTheme from \"../../../assets/audio/flea-market-theme.mp3\";\nimport fleaMarketMain from \"../../../assets/audio/flea-market-main.mp3\";\nimport styled from \"styled-components\";\n\nconst StyledAudioPlayer = styled.div`\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  display: flex;\n  text-align: center;\n  cursor: pointer;\n  width: 60px;\n  height: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n`;\n\nconst AudioPlayer = () => {\n  const [muted, setMuted] = useState(true);\n\n  const gameState = useAppSelector(selectGameState);\n  const [audioTrack, setAudioTrack] = useState();\n  const audioPlayerRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    if (audioPlayerRef.current === null) {\n      return;\n    }\n    if (gameState === GameStateEnum.INSTRUCTIONS) {\n      setAudioTrack(fleaMarketTheme);\n      audioPlayerRef.current.load();\n      return;\n    }\n    if (audioTrack === fleaMarketMain) {\n      return;\n    } else {\n      setAudioTrack(fleaMarketMain);\n      audioPlayerRef.current.load();\n      return;\n    }\n  }, [audioTrack, gameState]);\n\n  return (\n    <StyledAudioPlayer>\n      <div onClick={() => setMuted(!muted)}>{muted ? \"unmute\" : \"mute\"}</div>\n      <audio autoPlay={true} loop muted={muted} ref={audioPlayerRef}>\n        <source src={audioTrack} type=\"audio/mpeg\" />\n      </audio>\n    </StyledAudioPlayer>\n  );\n};\n\nexport default memo(AudioPlayer);\n","import Interactive from \"./game/Input/Interactive\";\nimport HUD from \"./game/View/HUD\";\nimport { useAppSelector } from \"../app/hooks\";\nimport { selectGameState, setGameState } from \"../redux/slices/fleaMarketSlice\";\nimport { FleaMarketFunction, GameStateEnum } from \"../app/constants\";\nimport { useEffect } from \"react\";\nimport { sendFunctionRequest } from \"./service/functionRequest\";\nimport AudioPlayer from \"./game/Common/AudioPlayer\";\n\nconst Main = () => {\n  const gameState = useAppSelector(selectGameState);\n\n  const newGame = async () => {\n    return await sendFunctionRequest({\n      function: FleaMarketFunction.NEW_GAME,\n    });\n  };\n\n  useEffect(() => {\n    const startNewGame = async () => {\n      const initGameState = await newGame();\n      setGameState(initGameState);\n    };\n    startNewGame();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        {gameState !== GameStateEnum.INIT &&\n          gameState !== GameStateEnum.INSTRUCTIONS &&\n          gameState !== GameStateEnum.CHASE && <HUD />}\n        <Interactive />\n      </div>\n      {gameState !== GameStateEnum.INIT && <AudioPlayer />}\n    </div>\n  );\n};\n\nexport default Main;\n","import Main from \"../components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport fleaMarketReducer from \"../redux/slices/fleaMarketSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    fleaMarket: fleaMarketReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {fleaMarket: fleaMarketReducer}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}